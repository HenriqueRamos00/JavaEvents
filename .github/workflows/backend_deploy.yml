name: Build and Deploy to Tailscale Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven Wrapper
        run: |
          chmod +x ./mvnw
          ./mvnw -B package --file pom.xml -DskipTests

      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
          tags: tag:ci-runner 

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create Application Properties
        run: |
          cat > application-prod.properties << EOF
          spring.application.name=events
          spring.pid.file=/opt/apps/app.pid
          spring.datasource.username=${{ secrets.DB_USERNAME }}
          spring.datasource.password=${{ secrets.DB_PASSWORD }}
          spring.datasource.url=${{ secrets.DB_URL }}
          springdoc.swagger-ui.path=/swagger-ui.html
          server.forward-headers-strategy=framework
          spring.jpa.hibernate.ddl-auto=create
          EOF

      - name: Deploy and Run Application
        run: |
          JAR_FILE=$(find target -name "*.jar" | head -n 1)
          if [ -z "$JAR_FILE" ]; then
            echo "Error: JAR file not found in target."
            exit 1
          fi

          # Add host to known_hosts
          ssh-keyscan java-web2 >> ~/.ssh/known_hosts 2>/dev/null || true

          # Copy JAR file and properties
          echo "--- Copying JAR file and configuration ---"
          scp $JAR_FILE appdeploy@java-web2:/opt/apps/app.jar
          scp application-prod.properties appdeploy@java-web2:/opt/apps/application-prod.properties

          echo "--- Restarting application service ---"
          ssh appdeploy@java-web2 "sudo systemctl restart app.service"

          echo "Deployment complete!"
          
      - name: Disconnect from Tailscale
        if: always()
        run: |
          echo "--- Disconnecting from Tailscale ---"
          sudo tailscale down || true
